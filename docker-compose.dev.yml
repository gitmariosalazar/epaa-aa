services:
  client-gateway-epaa-dev:
    image: client-gateway-epaa:latest
    build:
      context: ./client-gateway
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: client-gateway-epaa-dev
    ports:
      - "${GATEWAY_SERVER_PORT_DEVELOPMENT:-4005}:${GATEWAY_SERVER_PORT_DEVELOPMENT:-4005}"
    volumes:
      - ./client-gateway:/usr/src/app
      - client-gateway-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./client-gateway/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${GATEWAY_SERVER_PORT_DEVELOPMENT:-4005}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  qrcode-service-dev:
    build:
      context: ./qrcode
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: qrcode-service-dev
    ports:
      - "${QR_CODE_SERVER_PORT_DEVELOPMENT:-4006}:${QR_CODE_SERVER_PORT_DEVELOPMENT:-4006}"
    volumes:
      - ./qrcode:/usr/src/app
      - qrcode-service-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./qrcode/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${QR_CODE_SERVER_PORT_DEVELOPMENT:-4006}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  readings-service-dev:
    build:
      context: ./readings
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: readings-service-dev
    ports:
      - "${READINGS_SERVER_PORT_DEVELOPMENT:-4007}:${READINGS_SERVER_PORT_DEVELOPMENT:-4007}"
    volumes:
      - ./readings:/usr/src/app
      - readings-service-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./readings/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${READINGS_SERVER_PORT_DEVELOPMENT:-4007}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  epaa-database-legacy-service-dev:
    build:
      context: ./epaa-database-legacy
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: epaa-database-legacy-service-dev
    ports:
      - "${EPAA_DATABASE_LEGACY_SERVER_PORT_DEVELOPMENT:-4009}:${EPAA_DATABASE_LEGACY_SERVER_PORT_DEVELOPMENT:-4009}"
    volumes:
      - ./epaa-database-legacy:/usr/src/app
      - epaa-database-legacy-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./epaa-database-legacy/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${EPAA_DATABASE_LEGACY_SERVER_PORT_DEVELOPMENT:-4009}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  property-service-dev:
    build:
      context: ./property
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: property-service-dev
    ports:
      - "${PROPERTY_SERVER_PORT_DEVELOPMENT:-4010}:${PROPERTY_SERVER_PORT_DEVELOPMENT:-4010}"
    volumes:
      - ./property:/usr/src/app
      - property-service-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./property/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${PROPERTY_SERVER_PORT_DEVELOPMENT:-4010}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  clients-service-dev:
    build:
      context: ./clients
      dockerfile: dockerfile.dev
    restart: unless-stopped
    container_name: clients-service-dev
    ports:
      - "${CLIENTS_SERVER_PORT_DEVELOPMENT:-4011}:${CLIENTS_SERVER_PORT_DEVELOPMENT:-4011}"
    volumes:
      - ./clients:/usr/src/app
      - clients-service-node-modules:/usr/src/app/node_modules
    command: ["npm", "run", "start:dev"]
    env_file:
      - ./clients/.env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--max-old-space-size=1024
    networks:
      - epaa-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${CLIENTS_SERVER_PORT_DEVELOPMENT:-4011}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  client-gateway-node-modules:
  qrcode-service-node-modules:
  readings-service-node-modules:
  epaa-database-legacy-node-modules:
  property-service-node-modules:
  clients-service-node-modules:

networks:
  epaa-network-dev:
    external: true
